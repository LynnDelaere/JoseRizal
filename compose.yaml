services:
  database:
    container_name: postgres
    image: postgres:17.4
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d joserizal"]
      interval: 2s
      retries: 10

  backend:
    container_name: backend
    build: ./backend
    restart: always
    env_file: .env
    environment:
      DATABASE_URL: postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@database:5432/${POSTGRES_DB}
      AUTH_SECRET: ${AUTH_SECRET}
    volumes:
      - static_uploads:/backend/static/uploads
      - uploaded_images:/backend/uploaded_images
    ports:
      - "8000:8000"
    depends_on:
      database:
        condition: service_healthy

  frontend:
    container_name: frontend
    build: ./joserizalapp
    restart: always
    env_file: .env
    environment:
      VITE_API_URL: /api
    ports:
      - "80:80"
    depends_on:
      database:
        condition: service_healthy

  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4:latest
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@pgadmin.com
      PGADMIN_DEFAULT_PASSWORD: pgadmin
    ports:
      - "5050:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    depends_on:
      database:
        condition: service_healthy

  portainer:
    container_name: portainer
    image: portainer/portainer-ce:latest
    restart: always
    ports:
      - "9000:9000"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer_data:/data

volumes:
  postgres_data:
  static_uploads:
  uploaded_images:
  pgadmin_data:
  portainer_data:
